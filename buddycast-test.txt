# network size
SIZE 100

# parameters of periodic execution
CYCLES 100
CYCLE SIZE*10000

# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 0
MAXDELAY 0

# drop is a probability, 0<=DROP<=1
DROP 0

random.seed 1234567890

network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE


################### protocols ===========================

protocol.bc buddycast.BuddyCast
protocol.bc.linkable link
protocol.bc.step CYCLE
protocol.bc.transport tr

#protocol.urt UniformRandomTransport
#protocol.urt.mindelay (CYCLE*MINDELAY)/100
#protocol.urt.maxdelay (CYCLE*MAXDELAY)/100

#protocol.tr UnreliableTransport
#protocol.tr.transport urt
#protocol.tr.drop DROP

################### initialization ======================

init.start MethodInvoker
init.start.protocol bc
init.start.method work

init.rndlink WireKOut
init.rndlink.k 20
init.rndlink.protocol bc

#init.vals LinearDistribution
#init.vals.protocol avg
#init.vals.max SIZE
#init.vals.min 1

#init.sch CDScheduler
#init.sch.protocol avg
#init.sch.randstart
